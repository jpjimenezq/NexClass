# Generated by Django 5.1 on 2024-11-09 17:27

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=255)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('user_type', models.CharField(choices=[('Student', 'Student'), ('Teacher', 'Teacher')], max_length=10)),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
                ('profile_picture', models.ImageField(blank=True, default='profile_photos/default_profile.png', null=True, upload_to='profile_photos/')),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('profile_complete', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_message', models.TextField()),
                ('bot_response', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_messages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialities', models.CharField(choices=[('Mathematics', 'Mathematics'), ('Science', 'Science'), ('Languages', 'Languages'), ('History', 'History'), ('Geography', 'Geography'), ('Music', 'Music'), ('Art', 'Art'), ('Physical Education', 'Physical Education'), ('Computer Science', 'Computer Science'), ('Economics', 'Economics'), ('Philosophy', 'Philosophy'), ('Engineering', 'Engineering'), ('Psychology', 'Psychology'), ('Law', 'Law'), ('Medicine', 'Medicine'), ('Other', 'Other')], max_length=50)),
                ('biography', models.TextField()),
                ('description', models.TextField(default='No description provided.')),
                ('availability', models.CharField(choices=[('Full-Time', 'Full-Time'), ('Part-Time', 'Part-Time'), ('Flexible', 'Flexible')], max_length=50)),
                ('mode', models.CharField(choices=[('Online', 'Online'), ('In-Person', 'In-Person'), ('Hybrid', 'Hybrid')], max_length=50)),
                ('embedding', models.BinaryField(blank=True, null=True)),
                ('ciudad', models.CharField(default='Colombia', max_length=150)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
